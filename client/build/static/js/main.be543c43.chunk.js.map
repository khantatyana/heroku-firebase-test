{"version":3,"sources":["Components/Home.tsx","movies.service.ts","Components/Movies.tsx","Components/NotFound.tsx","Components/UserProfile.tsx","Components/Movie.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Home","BASE_URL","moviesService","params","a","this","getToken","token","searchParams","URLSearchParams","page","set","toString","q","maxDaysAgo","genre","axios","get","headers","Authorization","response","data","user","firebase","auth","currentUser","getIdToken","id","Enteredcomment","console","log","post","comment","uid","delete","timer","Movies","props","location","useLocation","useState","results","setResults","genres","setGenres","pager","setPager","loading","setLoading","useEffect","getGenres","search","document","querySelector","value","explore","searchResults","changePage","_","history","replace","selectGenre","e","target","textContent","toLowerCase","LinearProgress","color","className","Button","variant","onClick","map","Chip","label","TextField","onChange","window","clearTimeout","setTimeout","InputLabelProps","shrink","length","Pagination","currentPage","count","totalPages","ImageList","rowHeight","cols","result","ImageListItem","to","movieId","movie","posterPath","src","alt","title","ImageListItemBar","subtitle","releaseYear","NotFound","UserProfile","classes","makeStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","imageList","transform","titleBar","useStyles","userData","setUserData","undefined","error","setError","wishList","favorites","messages","item","img","year","photoURL","displayName","email","flexGrow","padding","spacing","margin","maxWidth","image","width","height","maxHeight","NonClickedButton","ClickedLikeButton","ClickedDislikeButton","ClickedWishButton","addLike","deleteLike","addDislike","deleteDislike","addToWishlist","deleteWishlist","Movie","movieData","setMovieData","likeButtonClicked","setLikeButtonClicked","dislikeButtonClicked","setDislikeButtonClicked","wishButtonClicked","setwishButtonClicked","setComment","btnClass","getMovieByID","match","fetchData","Paper","Grid","container","movieDetails","ButtonGroup","deleteFromLike","addToLike","deleteFromWish","deleteFromDislike","addToDislike","xs","sm","direction","Typography","gutterBottom","rating","avgRating","starRatedColor","numberOfStars","name","plotSummary","directors","alignItems","director","comments","onSubmit","preventDefault","addComment","alert","type","event","apps","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","uiConfig","signInFlow","signInOptions","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","callbacks","signInSuccessWithAuthResult","App","authenticated","setAuthenticated","onAuthStateChanged","AppBar","position","Toolbar","signOut","exact","path","component","from","firebaseAuth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.be543c43.chunk.js","sourcesContent":["function Home() {\n  return (\n    <div>\n      <h2>Welcome to the Movie Mate Recommendation Site</h2>\n      <p>\n        You can use this website to see a plethora of movies and add them to the\n        watch list!\n      </p>\n      <br></br>\n      <p>\n        You also can easily Like, Dislike, and rate the movies that you have\n        watched to improve the recommendations!\n      </p>\n    </div>\n  );\n}\n\nexport default Home;\n","import axios from \"axios\";\nimport firebase from \"firebase/app\";\nimport { ExploreResponse } from \"./models\";\n\nconst BASE_URL = \"http://localhost:4200\";\n\nclass MoviesService {\n  async explore(params: {\n    page: number;\n    q?: string;\n    maxDaysAgo?: number;\n    genre?: string;\n  }): Promise<ExploreResponse> {\n    const token = await this.getToken();\n\n    const searchParams = new URLSearchParams();\n    if (params.page) searchParams.set(\"page\", params.page.toString());\n    if (params.q) searchParams.set(\"q\", params.q);\n    if (params.maxDaysAgo)\n      searchParams.set(\"maxDaysAgo\", params.maxDaysAgo.toString());\n    if (params.genre) searchParams.set(\"genre\", params.genre);\n\n    const response = await axios.get(\n      `${BASE_URL}/movies/explore?${searchParams}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return response.data;\n  }\n\n  async getGenres(): Promise<string[]> {\n    const token = await this.getToken();\n\n    const response = await axios.get(`${BASE_URL}/movies/genres`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return response.data;\n  }\n\n  private async getToken(): Promise<string> {\n    try {\n      const user = firebase.auth().currentUser;\n      return await user.getIdToken();\n    } catch (e) {\n      return null;\n    }\n  }\n\n  async getMovieByID(id: number) {\n    const token = await this.getToken();\n    const response = await axios.get(`${BASE_URL}/movies/${id}`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    return response.data;\n  }\n  async addComment(id: number, Enteredcomment: String) {\n    const token = await this.getToken();\n    console.log(token);\n    const response = await axios.post(\n      `${BASE_URL}/movies/${id}/comments`,\n      {\n        comment: Enteredcomment,\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return response.data;\n  }\n\n  async addLike(id: number) {\n    //todo will need to check if the movie is already disliked, and if so then remove it\n    const token = await this.getToken();\n    const user = firebase.auth().currentUser;\n    const response = await axios.post(\n      `${BASE_URL}/users/${user.uid}/likedMovies/${id}`,\n      {},\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return response.data;\n  }\n  async deleteLike(id: number) {\n    //todo will need to check if the movie is already disliked, and if so then remove it\n    const token = await this.getToken();\n    const user = firebase.auth().currentUser;\n    const response = await axios.delete(\n      `${BASE_URL}/users/${user.uid}/likedMovies/${id}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return response.data;\n  }\n  async addDislike(id: number) {\n    const token = await this.getToken();\n    const user = firebase.auth().currentUser;\n    const response = await axios.post(\n      `${BASE_URL}/users/${user.uid}/dislikedMovies/${id}`,\n      {},\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return response.data;\n  }\n  async deleteDislike(id: number) {\n    //todo will need to check if the movie is already disliked, and if so then remove it\n    const token = await this.getToken();\n    const user = firebase.auth().currentUser;\n    const response = await axios.delete(\n      `${BASE_URL}/users/${user.uid}/dislikedMovies/${id}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return response.data;\n  }\n  async addToWishlist(id: number) {\n    const token = await this.getToken();\n    const user = firebase.auth().currentUser;\n    const response = await axios.post(\n      `${BASE_URL}/users/${user.uid}/wishMovies/${id}`,\n      {},\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return response.data;\n  }\n  async deleteWishlist(id: number) {\n    //todo will need to check if the movie is already disliked, and if so then remove it\n    const token = await this.getToken();\n    const user = firebase.auth().currentUser;\n    const response = await axios.delete(\n      `${BASE_URL}/users/${user.uid}/wishMovies/${id}`,\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    return response.data;\n  }\n}\n\nexport const moviesService = new MoviesService();\n","import { LinearProgress, TextField } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { useLocation, Link } from \"react-router-dom\";\nimport { Pager, SearchResult } from \"../models\";\nimport { moviesService } from \"../movies.service\";\nimport ImageList from \"@material-ui/core/ImageList\";\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\nimport ImageListItemBar from \"@material-ui/core/ImageListItemBar\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Button from \"@material-ui/core/Button\";\n\nlet timer = null;\n\nexport const Movies = (props) => {\n  const location = useLocation();\n  const [results, setResults] = useState([]);\n  const [genres, setGenres] = useState([]);\n  const [pager, setPager] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      const response = await moviesService.getGenres();\n      setGenres(response);\n    })();\n  }, []);\n\n  useEffect(() => {\n    (async () => {\n      const params = new URLSearchParams(location.search);\n      const page = +params.get(\"page\") || 1;\n      const q = params.get(\"q\");\n      const genre = params.get(\"genre\");\n      const input = document.querySelector(\"input\");\n      input.value = q;\n\n      const searchParams = { page, maxDaysAgo: 180 };\n\n      if (q || genre) {\n        delete searchParams[\"maxDaysAgo\"];\n\n        if (q) searchParams[\"q\"] = q;\n        if (genre) searchParams[\"genre\"] = genre;\n      }\n\n      setLoading(true);\n      const response = await moviesService.explore(searchParams);\n      setLoading(false);\n      setPager(response.pager);\n      setResults(response.searchResults);\n    })();\n  }, [location.search]);\n\n  const search = (e) => {\n    if (timer) {\n      window.clearTimeout(timer);\n    }\n\n    timer = setTimeout(() => {\n      const q = e.target.value;\n\n      const params = new URLSearchParams(location.search);\n\n      if (!q) {\n        params.delete(\"q\");\n      } else {\n        params.set(\"q\", q);\n        params.set(\"page\", \"1\");\n      }\n\n      props.history.replace(`/movies?${params}`);\n    }, 500);\n  };\n\n  const changePage = (_: any, page: number) => {\n    const params = new URLSearchParams(location.search);\n    params.set(\"page\", page.toString());\n    props.history.replace(`/movies?${params}`);\n  };\n\n  const selectGenre = (e) => {\n    const params = new URLSearchParams(location.search);\n    params.set(\"genre\", e.target.textContent.toLowerCase());\n    props.history.replace(`/movies?${params}`);\n  };\n\n  const deselectGenre = (e) => {\n    const params = new URLSearchParams(location.search);\n    params.delete(\"genre\");\n    props.history.replace(`/movies?${params}`);\n  };\n\n  return (\n    <div>\n      <div>\n        {loading ? (\n          <LinearProgress color=\"secondary\" />\n        ) : (\n          <div className=\"progress-placeholder\"></div>\n        )}\n      </div>\n\n      <div className=\"chips\">\n        <Button variant=\"contained\" color=\"primary\" onClick={deselectGenre}>\n          Clear Genre\n        </Button>\n        {genres.map((genre) => {\n          return <Chip key={genre} label={genre} onClick={selectGenre} />;\n        })}\n      </div>\n\n      <TextField\n        label=\"Search Movies\"\n        variant=\"outlined\"\n        onChange={search}\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n\n      {pager && results.length ? (\n        <Pagination\n          page={(pager as Pager)?.currentPage}\n          count={(pager as Pager)?.totalPages}\n          onChange={changePage}\n        />\n      ) : null}\n\n      <div>\n        {!loading && !results.length && location.search ? (\n          <p>No Results</p>\n        ) : null}\n      </div>\n\n      <ImageList rowHeight={400} cols={6}>\n        {results.map((result: SearchResult) => (\n          <ImageListItem key={result.movieId}>\n            <Link to={\"movies/\" + result.movieId}>\n              {result.movie.posterPath ? (\n                <img\n                  src={\n                    \"https://image.tmdb.org/t/p/w500/\" + result.movie.posterPath\n                  }\n                  alt={result.movie.title}\n                />\n              ) : (\n                <p className=\"no-image-available\">No image available</p>\n              )}\n\n              <ImageListItemBar\n                title={result.movie.title}\n                subtitle={<span>{result.movie.releaseYear}</span>}\n              />\n            </Link>\n          </ImageListItem>\n        ))}\n      </ImageList>\n      <br></br>\n      {pager && results.length ? (\n        <Pagination\n          page={(pager as Pager)?.currentPage}\n          count={(pager as Pager)?.totalPages}\n          onChange={changePage}\n        />\n      ) : null}\n    </div>\n  );\n};\n","export const NotFound = () => {\n  return <h1>Not Found</h1>;\n};\n","import { useEffect, useState } from \"react\";\nimport { LinearProgress } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport firebase from \"firebase/app\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ImageList from \"@material-ui/core/ImageList\";\nimport ImageListItem from \"@material-ui/core/ImageListItem\";\nimport ImageListItemBar from \"@material-ui/core/ImageListItemBar\";\nimport { Link } from \"react-router-dom\";\n// import IconButton from \"@material-ui/core/IconButton\";\n\nexport const UserProfile = (props) => {\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      justifyContent: \"space-around\",\n      overflow: \"hidden\",\n      backgroundColor: theme.palette.background.paper,\n    },\n    imageList: {\n      flexWrap: \"nowrap\",\n      // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n      transform: \"translateZ(0)\",\n    },\n    title: {\n      color: \"black\",\n    },\n    titleBar: {\n      background: \"white\",\n    },\n  }));\n\n  const classes = useStyles();\n  const [currentUser] = useState(firebase.auth().currentUser);\n  const [loading, setLoading] = useState(false);\n  const [userData, setUserData] = useState(null);\n  const [error, setError] = useState(undefined);\n  let wishList = null;\n  let favorites = null;\n\n  useEffect(() => {\n    (async () => {\n      console.log(userData);\n      console.log(currentUser);\n      try {\n        setLoading(true);\n        const { data } = await axios.get(`/users/${currentUser.uid}`);\n        console.log(data);\n        setUserData(data);\n        setLoading(false);\n      } catch (e) {\n        setError(e.messages);\n        console.log(error);\n      }\n    })();\n  }, [currentUser, userData, error]);\n\n  const buildWishListItem = (result) => {\n    return (\n      <ImageListItem key={result.movieId}>\n        <Link to={\"movies/\" + result.movieId}>\n          {result.img ? (\n            <img src={result.img} alt={result.title} />\n          ) : (\n            <p className=\"no-image-available\">No image available</p>\n          )}\n\n          <ImageListItemBar\n            title={`${result.title} (${result.year})`}\n            classes={{\n              root: classes.titleBar,\n              title: classes.title,\n            }}\n          />\n        </Link>\n      </ImageListItem>\n    );\n  };\n\n  const buildFavListItem = (result) => {\n    return (\n      <ImageListItem key={result.movieId}>\n        <Link to={\"movies/\" + result.movieId}>\n          {result.img ? (\n            <img src={result.img} alt={result.title} />\n          ) : (\n            <p className=\"no-image-available\">No image available</p>\n          )}\n\n          <ImageListItemBar\n            title={`${result.title} (${result.year})`}\n            classes={{\n              root: classes.titleBar,\n              title: classes.title,\n            }}\n          />\n        </Link>\n      </ImageListItem>\n    );\n  };\n\n  if (userData.wishList) {\n    wishList =\n      userData &&\n      userData.wishList.map((item) => {\n        return buildWishListItem(item);\n      });\n  }\n\n  if (userData.favorites) {\n    favorites =\n      userData &&\n      userData.favorites.map((item) => {\n        return buildFavListItem(item);\n      });\n  }\n\n  return (\n    <div>\n      <div>\n        {loading ? (\n          <LinearProgress color=\"secondary\" />\n        ) : (\n          <div className=\"progress-placeholder\"></div>\n        )}\n      </div>\n      <div className=\"profile-header\">\n        <img src={currentUser.photoURL} alt=\"Profile\" />\n        <p>Name: {currentUser.displayName}</p>\n        <p>Email: {currentUser.email}</p>\n      </div>\n      <h2> My Favorites </h2>\n      <div className={classes.root}>\n        <ImageList className={classes.imageList} rowHeight={350} cols={4}>\n          {favorites}\n        </ImageList>\n      </div>\n      <p>{` << Scroll >> `}</p>\n      <h2> My Wish List </h2>\n      <div className={classes.root}>\n        <ImageList className={classes.imageList} rowHeight={350} cols={4}>\n          {wishList}\n        </ImageList>\n      </div>\n      <p>{` << Scroll >> `}</p>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { moviesService } from \"../movies.service\";\nimport StarRatings from \"react-star-ratings\";\n\nimport {\n  Grid,\n  makeStyles,\n  Typography,\n  Paper,\n  ButtonGroup,\n  Button,\n  ImageListItem,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: \"auto\",\n    maxWidth: \"auto\",\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: \"auto\",\n    display: \"block\",\n    maxWidth: \"100%\",\n    maxHeight: \"100%\",\n  },\n  NonClickedButton: {\n    background: \"#ffffff\",\n  },\n  ClickedLikeButton: {\n    background: \"#00cc00\",\n  },\n  ClickedDislikeButton: {\n    background: \"#ff0000\",\n  },\n  ClickedWishButton: {\n    background: \"#ffd000\",\n  },\n}));\n\nasync function addToLike(id) {\n  await moviesService.addLike(id);\n}\nasync function deleteFromLike(id) {\n  await moviesService.deleteLike(id);\n}\nasync function addToDislike(id) {\n  await moviesService.addDislike(id);\n}\nasync function deleteFromDislike(id) {\n  await moviesService.deleteDislike(id);\n}\nasync function addToWishlist(id) {\n  await moviesService.addToWishlist(id);\n}\nasync function deleteFromWish(id) {\n  await moviesService.deleteWishlist(id);\n}\n\nexport const Movie = (props) => {\n  const [movieData, setMovieData] = useState(undefined);\n  const [likeButtonClicked, setLikeButtonClicked] = useState(false);\n  const [dislikeButtonClicked, setDislikeButtonClicked] = useState(false);\n  const [wishButtonClicked, setwishButtonClicked] = useState(false);\n  const [comment, setComment] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const classes = useStyles();\n  let btnClass = classes.NonClickedButton;\n\n  const handleChangedComment = (event) => {\n    setComment(event.target.value);\n  };\n\n  /*useEffect(() => {\n    console.log(\"button changed\");\n    btnClass =\n      likeButtonClicked === false\n        ? classes.NonClickedButton\n        : classes.ClickedLikeButton;\n    console.log(btnClass);\n  }, [likeButtonClicked]);*/\n\n  useEffect(() => {\n    console.log(\"useEffect fired\");\n    async function fetchData() {\n      try {\n        //grab the id of the show and then display all of its information\n        const response = await moviesService.getMovieByID(\n          props.match.params.movieId\n        );\n        console.log(response);\n        setMovieData(response);\n        setLoading(false);\n        console.log(movieData);\n      } catch (e) {\n        console.log(e);\n      }\n    }\n    fetchData();\n  }, [\n    props.match.params.movieId,\n    likeButtonClicked,\n    dislikeButtonClicked,\n    wishButtonClicked,\n  ]);\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n  return (\n    <div>\n      <br></br>\n      <Paper className={classes.paper}>\n        <Grid container spacing={3}>\n          <Grid item>\n            <ImageListItem key={movieData.movieDetails.movie.movieId}>\n              {movieData.movieDetails.movie.posterPath ? (\n                <img\n                  src={\n                    \"https://image.tmdb.org/t/p/w500/\" +\n                    movieData.movieDetails.movie.posterPath\n                  }\n                  alt={movieData.movieDetails.movie.title}\n                />\n              ) : (\n                <p className=\"no-image-available\">No image available</p>\n              )}\n            </ImageListItem>\n            <br></br>\n            <ButtonGroup>\n              {likeButtonClicked === false ? (\n                <Button\n                  className={classes.ClickedLikeButton}\n                  onClick={() => {\n                    deleteFromLike(movieData.movieDetails.movieId);\n                    setLikeButtonClicked(true);\n                  }}\n                >\n                  Undo Like\n                </Button>\n              ) : (\n                <Button\n                  className={btnClass}\n                  onClick={() => {\n                    addToLike(movieData.movieDetails.movieId);\n                    setLikeButtonClicked(false);\n                  }}\n                >\n                  Like\n                </Button>\n              )}\n              {wishButtonClicked === false ? (\n                <Button\n                  className={classes.ClickedWishButton}\n                  onClick={() => {\n                    deleteFromWish(movieData.movieDetails.movieId);\n                    setwishButtonClicked(true);\n                  }}\n                >\n                  Remove from Wishlist\n                </Button>\n              ) : (\n                <Button\n                  className={btnClass}\n                  onClick={() => {\n                    addToWishlist(movieData.movieDetails.movieId);\n                    setwishButtonClicked(false);\n                  }}\n                >\n                  Add to Wishlist\n                </Button>\n              )}\n              {dislikeButtonClicked === false ? (\n                <Button\n                  className={classes.ClickedDislikeButton}\n                  onClick={() => {\n                    deleteFromDislike(movieData.movieDetails.movieId);\n                    setDislikeButtonClicked(true);\n                  }}\n                >\n                  Undo Dislike\n                </Button>\n              ) : (\n                <Button\n                  className={btnClass}\n                  onClick={() => {\n                    addToDislike(movieData.movieDetails.movieId);\n                    setDislikeButtonClicked(false);\n                  }}\n                >\n                  Dislike\n                </Button>\n              )}\n            </ButtonGroup>\n          </Grid>\n          <br></br>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction=\"column\" spacing={2}>\n              <Grid item xs>\n                <Typography gutterBottom variant=\"h2\">\n                  {movieData.movieDetails.movie.title}\n                </Typography>\n                <StarRatings\n                  rating={movieData.movieDetails.movie.avgRating}\n                  starRatedColor=\"yellow\"\n                  numberOfStars={5}\n                  name=\"rating\"\n                />\n                <br></br>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Average Rating: {movieData.movieDetails.movie.avgRating}\n                </Typography>\n                <br></br>\n                {movieData.movieDetails.movie.genres && (\n                  <ButtonGroup>\n                    {movieData.movieDetails.movie.genres &&\n                      movieData.movieDetails.movie.genres.map(function (genre) {\n                        return <Button>{genre}</Button>;\n                      })}\n                  </ButtonGroup>\n                )}\n                <br></br>\n                <br></br>\n                <Typography variant=\"body2\" gutterBottom>\n                  {movieData.movieDetails.movie.plotSummary}\n                </Typography>\n                <br></br>\n                <Typography variant=\"body2\" color=\"textSecondary\">\n                  Year Released: {movieData.movieDetails.movie.releaseYear}\n                </Typography>\n                {movieData.movieDetails.movie.directors && (\n                  <Grid\n                    item\n                    xs\n                    container\n                    direction=\"row\"\n                    alignItems=\"center\"\n                    spacing={2}\n                  >\n                    <Grid item xs>\n                      Directors:\n                    </Grid>\n                    <Grid item xs>\n                      <Typography\n                        gutterBottom\n                        variant=\"body2\"\n                        color=\"textSecondary\"\n                      >\n                        {movieData.movieDetails.movie.directors &&\n                          movieData.movieDetails.movie.directors.map(function (\n                            director\n                          ) {\n                            return <p>{director}</p>;\n                          })}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                )}\n                <br></br>\n                <h3>Comments:</h3>\n                <br></br>\n                {movieData.comments.length > 0 ? (\n                  movieData.comments.map(function (comment) {\n                    return (\n                      <div>\n                        <Paper className={classes.paper}>\n                          {comment.comment}\n                        </Paper>\n                        <br></br>\n                      </div>\n                    );\n                  })\n                ) : (\n                  <p>No comments</p>\n                )}\n                <br></br>\n                <h3>Add a comment:</h3>\n                <Paper className={classes.paper}>\n                  <form\n                    onSubmit={(e) => {\n                      e.preventDefault();\n                      moviesService.addComment(\n                        props.match.params.movieId,\n                        comment\n                      );\n                      alert(\"Comment Added\");\n                    }}\n                  >\n                    <label>\n                      <input\n                        type=\"text\"\n                        name=\"comment\"\n                        onChange={handleChangedComment}\n                        value={comment}\n                      ></input>\n                    </label>\n                    <input type=\"submit\" value=\"Submit\"></input>\n                  </form>\n                </Paper>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </div>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase/app\";\nimport Home from \"./Components/Home\";\nimport \"firebase/auth\";\nimport \"./App.css\";\nimport { Movies } from \"./Components/Movies\";\nimport { NotFound } from \"./Components/NotFound\";\nimport { UserProfile } from \"./Components/UserProfile\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { Movie } from \"./Components/Movie\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDYk4I-2c5E72cvb_wJwg3syt7xjrAssQg\",\n  authDomain: \"movie-mate-43364.firebaseapp.com\",\n  projectId: \"movie-mate-43364\",\n  storageBucket: \"movie-mate-43364.appspot.com\",\n  messagingSenderId: \"174076031402\",\n  appId: \"1:174076031402:web:a5609b82cf4905d55c3bd3\",\n  measurementId: \"G-54RM0PJWCW\",\n};\n\nif (!firebase.apps.length) firebase.initializeApp(firebaseConfig);\n\nconst uiConfig = {\n  signInFlow: \"popup\",\n  signInOptions: [\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n  ],\n  callbacks: {\n    signInSuccessWithAuthResult: () => false,\n  },\n};\n\nfunction App() {\n  const [authenticated, setAuthenticated] = useState(false);\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      setAuthenticated(!!user);\n    });\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\">\n              <Link to=\"/movies\">Movie Mate</Link>\n            </Typography>\n            <Typography variant=\"h6\">\n              <Link to=\"/profile\">Profile</Link>\n            </Typography>\n            {authenticated ? (\n              <Button color=\"inherit\" onClick={() => firebase.auth().signOut()}>\n                Sign-out\n              </Button>\n            ) : null}\n          </Toolbar>\n        </AppBar>\n        {authenticated ? (\n          <div className=\"App-body\">\n            <Switch>\n              <Route exact path=\"/movies\" component={Movies} />\n              <Route exact path=\"/movies/:movieId\" component={Movie} />\n              <Route exact path=\"/404\" component={NotFound} />\n              <Route exact path=\"/profile\" component={UserProfile} />\n              <Redirect from=\"\" to=\"/movies\" />\n            </Switch>\n          </div>\n        ) : (\n          <div className=\"App-body\">\n            <Home></Home>\n            <p>Please sign-in:</p>\n            <StyledFirebaseAuth\n              uiConfig={uiConfig}\n              firebaseAuth={firebase.auth()}\n            />\n          </div>\n        )}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}